{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","context/DividendContext.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/DividendTransaction.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","filter","transaction","id","payload","GlobalContext","createContext","GlobalProvider","children","useReducer","localData","sessionStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","transactions","deleteTransaction","addTransaction","DividendContext","DividendContextProvider","props","useState","dividend","setDividend","addDividend","calculatedividend","Balance","afterTax","useContext","amounts","map","amount","expense","total_amounts","reduce","acc","item","toFixed","total_expense","total","Number","afterCorporationTax","IncomeExpenses","ex","income","className","Transaction","text","Math","abs","onClick","TransactionList","DividendTransaction","onSubmit","e","preventDefault","htmlFor","onChange","target","placeholder","AddTransaction","setText","setAmount","setExpense","alert","newTransaction","floor","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3a5f10b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div>\r\n      <h2>PLC by Shares Tax Tracker Year 19/20</h2> \r\n      <h6>Remember your Corporation Tax must be paid 21months after company was incorporated.</h6>\r\n      <h6>Dividends: First £2000 is Tax free, 0 - £37500 = 7.5 % tax, £37500 - £150000 = 32.5 %, more than £150000 = 38.1%</h6>     \r\n    </div>\r\n  )\r\n}\r\n","export const AppReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return state.filter(transaction => transaction.id !== action.payload)\r\n      \r\n      case 'ADD_TRANSACTION':\r\n      return [\r\n        ...state, action.payload\r\n      ]\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import React, {createContext, useReducer, useEffect } from 'react';\r\nimport {AppReducer} from './AppReducer'\r\n\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext();\r\n\r\n\r\n// Create Provider component for access to Globalstate for all components\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch ] = useReducer(AppReducer, [], () =>{\r\n    const localData = sessionStorage.getItem('transactions');\r\n    return localData ? JSON.parse(localData): [];\r\n  });\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    sessionStorage.setItem('transactions', JSON.stringify(state))\r\n\r\n  }, [state]);\r\n\r\n  //disptach actions i.e action.type && action.payload\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (\r\n  <GlobalContext.Provider value= {{ transactions: state, deleteTransaction, addTransaction}}>\r\n    { children }\r\n  </GlobalContext.Provider>\r\n  );\r\n}","import React, {createContext, useState } from \"react\";\r\n\r\nexport const DividendContext = createContext();\r\n\r\n\r\nexport const DividendContextProvider = (props) => {\r\n  const [dividend, setDividend]=useState(0)\r\n\r\nconst addDividend = (calculatedividend) => {\r\n  if (calculatedividend <= 2000 ) {\r\n    setDividend('Amount is Tax free');\r\n   \r\n  } else if (calculatedividend > 2000 && calculatedividend <= 37500){\r\n    setDividend(0.075 * (calculatedividend - 2000));\r\n  } else if (calculatedividend > 37500 && calculatedividend <= 150000){\r\n    setDividend(0.325 * (calculatedividend - 2000));\r\n  } else {\r\n    setDividend(0.381 * (calculatedividend - 2000));\r\n  } \r\n \r\n}\r\n\r\n  return (\r\n    <DividendContext.Provider value={{dividend, addDividend}}>\r\n      {props.children}\r\n    </DividendContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { DividendContext } from '../context/DividendContext'\r\n\r\n\r\n\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const {dividend } = useContext(DividendContext);\r\n\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const expense = transactions.map(transaction => transaction.expense);\r\n\r\n  const total_amounts = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  const total_expense = expense.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  const total = Number(total_amounts) +  Number(total_expense)\r\n\r\n\r\n  let afterTax;\r\n  if (total <= 0) {\r\n    afterTax = 0\r\n  }else {\r\n      afterTax = (19/100) * total\r\n  }  \r\n\r\n  const afterCorporationTax = total - afterTax;\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h4>Total Business Profit (Before Tax)</h4>\r\n      <h1>£{total}</h1>\r\n\r\n      <hr />\r\n\r\n      <h4>Corporation Tax</h4>\r\n      <h1>£{afterTax}</h1>\r\n      <hr />\r\n\r\n      <h4>Total Business Profit (After Tax)</h4>\r\n      <h1>£{afterCorporationTax}</h1>\r\n\r\n      <hr />\r\n\r\n      <h4>Dividend Cash Out Tax</h4>\r\n        <h1>£{dividend}</h1>\r\n            \r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const ex = transactions.map(transaction => transaction.expense);\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    ex.filter(item => item < 0).reduce((acc, item) => (acc += item), 0)\r\n  ).toFixed(2);\r\n  return (\r\n       <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Profit</h4>\r\n            <p className=\"money plus\">£{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expenses</h4>\r\n          <p className=\"money minus\">£{expense}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  return transaction.amount ? (\r\n      <li className= 'plus'>\r\n      {transaction.text} <span> + £{Math.abs(transaction.amount)}</span>\r\n      <button onClick = {() => deleteTransaction(transaction.id)}className=\"delete-btn\">x</button>\r\n    </li>\r\n    ): (\r\n      <li className='minus'>\r\n      {transaction.text} <span> - £{Math.abs(transaction.expense)}</span>\r\n      <button onClick = {() => deleteTransaction(transaction.id)}className=\"delete-btn\">x</button>\r\n    </li>\r\n    )\r\n}\r\n","import React, { useContext }from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  return (\r\n    <div>\r\n          <h3>List of Business Transactions</h3>\r\n          <ul className=\"list\">\r\n             { transactions.map( transaction => ( \r\n             <Transaction key={transaction.id } transaction = { transaction } />                \r\n             ))}\r\n          \r\n          </ul>      \r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport {DividendContext} from'../context/DividendContext'\r\n\r\n\r\n\r\nexport const DividendTransaction = () => {\r\n  const { addDividend } = useContext(DividendContext);\r\n  const [dividend, setDividend ] = useState(0);\r\n \r\n  \r\n\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addDividend(dividend);  \r\n  }\r\n  \r\n  \r\n  \r\n  return (    \r\n      <div>\r\n        \r\n        <h3>Dividends Cash out</h3>\r\n          <form onSubmit={onSubmit}>\r\n            <div>\r\n                <label htmlFor=\"Dividend\">Dividend Amount <br /></label>\r\n                <input type=\"number\" value={dividend} onChange={(e) => setDividend(e.target.value)}  placeholder=\"Enter amount...\" />\r\n            </div>\r\n              <button className=\"btn btn-danger\">Calculate</button>\r\n              <h6>Please put dividend amount you want to cash out to calculate Tax you pay.</h6>\r\n          </form>\r\n        </div>\r\n      \r\n      \r\n    \r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { DividendTransaction } from './DividendTransaction'\r\n\r\nexport const AddTransaction = () => {\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const [text, setText ] = useState('');\r\n  const [amount, setAmount ] = useState(0);\r\n  const [expense, setExpense ] = useState(0);\r\n  \r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alert('Please insert a Transaction name')\r\n\r\n    } else {\r\n      const newTransaction = {\r\n        id: Math.floor(Math.random() * 100000000),\r\n        text,\r\n        amount: +amount,\r\n        expense: -expense\r\n      }\r\n      addTransaction(newTransaction);\r\n      setText('');\r\n      setAmount(0);\r\n      setExpense(0);\r\n    }\r\n  \r\n\r\n    }\r\n\r\n   \r\n    \r\n   \r\n  return (\r\n    <div className=\"transaction-calc-container\">\r\n    <div>\r\n      <h3>Add New Business Transaction</h3>\r\n      <form onSubmit = {onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Transaction Name</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter Transaction...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}  placeholder=\"Enter amount...\" />\r\n          <label htmlFor=\"amount\">Amount <br />\r\n            (negative - expense)</label\r\n          >\r\n          <input type=\"number\" value={expense} onChange={(e) => setExpense(e.target.value)}  placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>      \r\n    </div>\r\n\r\n      <div>\r\n        <DividendTransaction />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\nimport {DividendContextProvider} from './context/DividendContext'\n\n\n\n\n\nfunction App() {\n  return (\n      <GlobalProvider>\n          <Header />\n          <div className=\"container\">\n            <DividendContextProvider> \n              <Balance />           \n              <IncomeExpenses />\n              <AddTransaction />              \n              <TransactionList />\n          </DividendContextProvider>\n              \n           \n          </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}